name: Publish

# https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#example-using-multiple-events-with-activity-types-or-configuration
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main

jobs:
  matrix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get matrix
        id: matrix
        uses: './.github/actions/matrix'

    outputs:
      lambda: ${{ steps.matrix.outputs.lambda }}
      tensorflow: ${{ steps.matrix.outputs.tensorflow }}

  build:
    needs: matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#example-6
        lambda: ${{ fromJson(needs.matrix.outputs.lambda) }}
        tensorflow: ${{ fromJson(needs.matrix.outputs.tensorflow )}}

    container: amazon/aws-lambda-nodejs:${{ matrix.lambda }}

    steps:
      - name: Install dependencies with yum
        # yum https://stackoverflow.com/a/14668751
        # Development Tools https://stackoverflow.com/a/32090991
        run: |
          yum install tar -y
          yum install git -y
          yum groupinstall "Development Tools" -y
          yum install python3 -y

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install tensorflow
        working-directory: ./tfjs-node-lambda-releases
        # https://stackoverflow.com/a/35589472
        run: |
          npm install --build-from-source @tensorflow/tfjs-node@${{ matrix.tensorflow }}
          npx modclean@3.0.0-beta.1 -n default:caution --no-progress --run
          rm -rf node_modules/@tensorflow/tfjs-backend-webgl
          rm -rf node_modules/@tensorflow/tfjs-converter

      - name: Compile
        id: compile
        uses: './.github/actions/compile'
        with:
          lambda: ${{ matrix.lambda }}
          tensorflow: ${{ matrix.tensorflow }}
          # keep format for backwards compatibility nodejs10.x-tf1.7.4.br
          binary: 'nodejs${{ matrix.lambda }}.x-tf${{ matrix.tensorflow }}.br'

      - name: List files
        run: |
          ls -lh

      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          # keep format for backwards compatibility nodejs10.x-tf1.7.4.br
          name: 'nodejs${{ matrix.lambda }}.x-tf${{ matrix.tensorflow }}'
          path: './nodejs${{ matrix.lambda }}.x-tf${{ matrix.tensorflow }}.br'
          retention-days: 2

  publish:
    needs: [matrix, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Download releases
        uses: actions/download-artifact@v2
        with:
          path: './tfjs-node-lambda-releases'

      - name: Add matrix.json
        working-directory: ./tfjs-node-lambda-releases
        # https://stackoverflow.com/a/35589472
        # keep format for backwards compatibility nodejs10.x-tf1.7.4.br
        run: |
          echo '{"lambda":'$(node --print 'JSON.stringify(${{ needs.matrix.outputs.lambda }}.map(version => `nodejs${version}.x`))')',"tensorflow":${{ needs.matrix.outputs.tensorflow }}}' >| matrix.json

      - name: Fix folder structure
        working-directory: ./tfjs-node-lambda-releases
        # https://unix.stackexchange.com/a/584986
        run: |
          mv */* .
          find . -type d -empty -delete

      - name: List releases
        working-directory: ./tfjs-node-lambda-releases
        run: |
          ls -lh

      - name: Publish tfjs-node-lambda
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          # https://github.com/semantic-release/npm/issues/277#issuecomment-723431906
          NPM_CONFIG_REGISTRY: https://registry.npmjs.org:8443/

      - name: Update tfjs-node-lambda-releases version
        id: version
        uses: './.github/actions/release-version'

      - name: Publish tfjs-node-lambda-releases
        working-directory: ./tfjs-node-lambda-releases
        # https://github.com/semantic-release/semantic-release/issues/193
        # TODO: Deprecate tfjs-node-lambda-releases
        run: |
          git config user.name github-actions
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add -A
          npx git-cz --non-interactive --type=ci --subject="Publish ${{ steps.version.outputs.version }}"
          git push
          npx rimraf *.br
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
