name: Prepublish

# https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#example-using-multiple-events-with-activity-types-or-configuration
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main

jobs:
  matrix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get matrix
        id: matrix
        uses: './.github/actions/matrix'

    outputs:
      lambda: ${{ steps.matrix.outputs.lambda }}
      tensorflow: ${{ steps.matrix.outputs.tensorflow }}

  build:
    needs: matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#example-6
        lambda: ${{ fromJson(needs.matrix.outputs.lambda) }}
        tensorflow: ${{ fromJson(needs.matrix.outputs.tensorflow )}}

    container: lambci/lambda:build-${{ matrix.lambda }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Compile
        id: compile
        uses: './.github/actions/compile'
        with:
          lambda: ${{ matrix.lambda }}
          tensorflow: ${{ matrix.tensorflow }}
          binary: '${{ matrix.lambda }}-tf${{ matrix.tensorflow }}.br'

      # Upload binary artifact
      # Consider uploading the
      - name: Echo variables
        run: |
          echo "${{ matrix.lambda }}"
          echo "${{ matrix.tensorflow }}"
          node -v

  publish:
    needs: [matrix, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

        #  echo the outputs from needs.matrix.outputs
      - name: Download artifacts
        run: |
          echo "demo"
          echo "{ "lambda": ${{ needs.matrix.outputs.lambda }}, "tensorflow": ${{ needs.matrix.outputs.tensorflow }}}"

      - name: Publish tfjs-node-lambda-releases
        # https://stackoverflow.com/a/58142276
        working-directory: ./tfjs-node-lambda-releases
        run: |
          echo "demo"

      - name: Publish tfjs-node-lambda release
        run: |
          echo "demo"
